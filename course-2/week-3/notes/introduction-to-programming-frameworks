-- Deep Learning Frameworks --

Pointers for choosing deep learning frameworks:
	Ease of programming (development and deployment)
	Running speed
	!Truly open (open source with good governance)

===============================================================================
-- TensorFlow --

import numpy as np
import tensorflow as tf

w = tf.Variable(0, dtype=tf.float32)
optimizer = tf.keras.optimizers.Adam(0.1)

def train_step():
	with tf.GradientType() as tape:
		cost = w ** 2 - 10*w + 25
	trainable_variables = [w]
	grads = tape.gradient(cost, trainable_variables)
	optimizer.apply_gradients(zip(grads, trainable_variables))

print(w)	

--------------------------------------



===============================================================================
